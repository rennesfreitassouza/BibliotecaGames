{"version":3,"sources":["./src/app/plataforms/plataforms-form/plataforms-form.component.ts","./src/app/plataforms/plataforms-form/plataforms-form.component.html","./src/app/plataforms/plataforms.module.ts","./src/app/plataforms/plataforms.service.ts","./src/app/plataforms/plataforms-routing.module.ts","./src/app/plataforms/platafomrs-lista/platafomrs-lista.component.html","./src/app/plataforms/platafomrs-lista/platafomrs-lista.component.ts"],"names":[],"mappings":"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","file":"plataforms-plataforms-module.js","sourcesContent":["\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Plataforms } from './../plataforms';\nimport { Location } from '@angular/common';\nimport { PlataformsService } from './../plataforms.service';\n\n\n@Component({\n  selector: 'app-plataforms-form',\n  templateUrl: './plataforms-form.component.html',\n  styleUrls: ['./plataforms-form.component.scss']\n})\nexport class PlataformsFormComponent implements OnInit {\n\n  form: FormGroup = new FormGroup ({\n    NAME: new FormControl()\n  });\n\n  submitted = false;\n\n  constructor(private fb: FormBuilder, private service: PlataformsService, private location: Location) { }\n\n\n  ngOnInit(): void {\n\n    this.form = this.fb.group({\n      NAME: [null, [Validators.required, Validators.minLength(1), Validators.maxLength(255)]]\n    });\n  }\n\n  onSubmit(){\n    this.submitted = true;\n    console.log(this.form.value);\n    console.log(this.form.valid);\n    let plataforms: Plataforms = { PLATAFORMS_ID: 0, NAME: this.form.value.NAME };\n    if (this.form.valid){\n      console.log('submit: ' + plataforms.NAME);\n      this.service.create(plataforms).subscribe(\n          success => {\n            console.log('Success!');\n            this.location.back();\n          },\n          error => console.error(error),\n          () => console.log('completed request')\n      );\n    }\n  }\n\n  onCancel(){\n    this.submitted = false;\n    this.form.reset();\n    console.log(this.form.reset());\n  }\n\n}\n","<form class=\"needs-validation\" novalidate [formGroup]=\"this.form\" style=\"padding-top: 10px\">\n\n    <div class=\"col-md-4\">\n        <label for=\"NAME\" class=\"form-label\">Nome da Plataforma</label>\n        <input type=\"text\" class=\"form-control\" id=\"NAME\" placeholder=\"Nome da Plataforma\" formControlName=\"NAME\" />\n    </div>\n\n    <div class=\"col-md-4\" style=\"margin-top: 10px\">\n        <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSubmit()\">Salvar</button>\n        <button type=\"button\" class=\"btn btn-default\" (click)=\"onCancel()\">Cancelar</button>\n    </div>\n\n</form>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PlataformsRoutingModule } from './plataforms-routing.module';\nimport { PlatafomrsListaComponent } from './platafomrs-lista/platafomrs-lista.component';\nimport { PlataformsFormComponent } from './plataforms-form/plataforms-form.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [PlatafomrsListaComponent, PlataformsFormComponent],\n  imports: [\n    CommonModule,\n    PlataformsRoutingModule,\n    ReactiveFormsModule\n  ]\n})\nexport class PlataformsModule { }\n","import { take, tap } from 'rxjs/operators';\nimport { Plataforms } from './plataforms';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlataformsService {\n\n  private readonly APISELECT = 'http://localhost:3000/select/?opcaoSelect=PLATAFORMS&daTabelaEmQue=';\n  private readonly APIINSERT = 'http://localhost:3000/insert/';\n  private readonly APIDELETE = 'http://localhost:3000/delete/?opcaoDelete=PLATAFORMS&PLATAFORMSplataforms_IdOrName=';\n\n  constructor(private http: HttpClient) { }\n\n  \n  list () {\n    return this.http.get<Plataforms[]>(this.APISELECT)\n    .pipe(\n      tap(console.log)\n    );\n  }\n\n  create(plataforms : Plataforms) {\n    return this.http.post(this.APIINSERT + plataforms.NAME, null).pipe(take(1));\n  }\n\n  remove(plataforms: Plataforms) {\n    console.log(plataforms.NAME);\n    if (plataforms.NAME){\n      return this.http.delete(this.APIDELETE + plataforms.PLATAFORMS_ID).pipe(take(1));\n    }\n    return this.http.delete(`${this.APIDELETE}` + plataforms.NAME).pipe(take(1));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PlatafomrsListaComponent } from './platafomrs-lista/platafomrs-lista.component';\nimport { PlataformsFormComponent } from './plataforms-form/plataforms-form.component';\n\nconst routes: Routes = [\n  { path: '', component: PlatafomrsListaComponent },\n  { path: 'novo', component: PlataformsFormComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PlataformsRoutingModule { }\n","<div class=\"card mt-3\">\n    <div class=\"card-header\">\n      <div class=\"float-left\">\n        <h4>Plataformas</h4>\n      </div>\n      <div class=\"float-right\">\n        <button type=\"button\" class=\"btn btn-primary\" [routerLink]=\"['novo']\">Nova Plataforma</button>\n      </div>\n    </div>\n    <div class=\"card-body\">\n      <table class=\"table table-hover\"><!-- *ngIf=\"(cursos$ | async) as cursos; else loading\"> -->\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Plataforms_Id</th>\n            <th>Name</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n        <tr *ngFor=\"let plataform of plataforms\">\n            <td>#</td>\n            <td>{{ plataform.PLATAFORMS_ID }}</td>\n            <td>{{ plataform.NAME }}</td>\n                        \n            <td>\n              <span class=\"float-right\">\n                <button class=\"btn btn-outline-danger mb-1 btn-sm\" (click)=\"onDelete(plataform)\">\n                  Remover\n                </button>\n              </span>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n  \n      <!-- <ng-template #loading>\n        <span>Carregando Cursos...</span>\n      </ng-template> -->\n  \n      <!--ng-template #loadingError>\n        <div *ngIf=\"error$ | async; else loading\" >\n          Erro ao carregar cursos. Tente novamente mais tarde.\n        </div>\n        <ng-template #loading>\n            <span>Carregando Cursos...</span>\n        </ng-template>\n      </ng-template -->\n    </div>\n  </div>\n  \n  <ng-template #deleteModal>\n    <div class=\"modal-body text-center\">\n      <p>Tem certeza que deseja remover esse curso?</p>\n      <button type=\"button\" class=\"btn btn-default\">Sim</button> <!-- (click)=\"onConfirmDelete()\">Sim</button>-->\n      <button type=\"button\" class=\"btn btn-primary\">Não</button> <!-- (click)=\"onDeclineDelete()\">Nao</button> -->\n    </div>\n  </ng-template>","import { Plataforms } from './../plataforms';\nimport { Component, OnInit } from '@angular/core';\nimport { PlataformsService } from './../plataforms.service';\n\n@Component({\n  selector: 'app-platafomrs-lista',\n  templateUrl: './platafomrs-lista.component.html',\n  styleUrls: ['./platafomrs-lista.component.scss']\n})\nexport class PlatafomrsListaComponent implements OnInit {\n\n  plataforms: Plataforms[] = [{PLATAFORMS_ID: 0, NAME: \"\"}];\n\n  constructor(private service: PlataformsService) { }\n\n  ngOnInit(): void {\n    this.service.list().subscribe(dados => this.plataforms = dados);\n  }\n\n  onDelete(plataforms : Plataforms){\n    console.log(plataforms.NAME);\n    this.service.remove(plataforms).subscribe(\n      success=> {\n        this.service.list().subscribe(dados => this.plataforms = dados);\n      },\n      error => console.error(error),\n      () => console.log('completed request')\n    );\n  }\n\n}\n"],"sourceRoot":"webpack:///"}